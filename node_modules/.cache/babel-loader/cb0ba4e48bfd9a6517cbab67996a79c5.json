{"ast":null,"code":"var _jsxFileName = \"/home/youcef/Desktop/foodapp/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { OverlayMenu } from \"./OverlayMenu\";\nimport style from './Header.module.css';\nimport { connect } from \"react-redux\";\nimport { logSelector } from \"../store/logStorage/logSelector\";\nimport { updateLog } from \"../store/logStorage/logActions\";\nimport { overSelector } from \"../store/overlay/overSelectors\";\nimport { updateOver } from \"../store/overlay/overActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HeaderComponent = ({\n  log,\n  over,\n  changeLog,\n  changeOver\n}) => {\n  _s();\n\n  const [navColor, SetNavColor] = useState(false);\n\n  const changeNavColor = () => {\n    if (window.scrollY > 120) SetNavColor(true);else SetNavColor(false);\n  };\n\n  window.addEventListener('scroll', changeNavbarColor);\n\n  let navItem = log => {\n    if (log) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Votre panier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => changeLog(),\n          children: \"Se d\\xE9connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => changeLog(),\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  if (over) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OverlayMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.cross,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => changeOver(),\n        src: \"https://img.icons8.com/ios-glyphs/30/000000/delete-sign.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: navColor ? style['header-scrolled'] : style.header,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.elem,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.brand,\n            children: \"Bouterestaurant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.links,\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), navItem(log)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.cross,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => changeOver(),\n              src: \"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(HeaderComponent, \"Nj+G9H3H7MKzerEMOVNifwupcHM=\");\n\n_c = HeaderComponent;\nexport const Header = connect(state => ({\n  log: logSelector(state),\n  over: overSelector(state)\n}), dispatch => ({\n  changeLog: () => dispatch(updateLog()),\n  changeOver: () => dispatch(updateOver())\n}))(HeaderComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderComponent\");","map":{"version":3,"sources":["/home/youcef/Desktop/foodapp/src/components/Header.js"],"names":["React","useEffect","useState","OverlayMenu","style","connect","logSelector","updateLog","overSelector","updateOver","HeaderComponent","log","over","changeLog","changeOver","navColor","SetNavColor","changeNavColor","window","scrollY","addEventListener","changeNavbarColor","navItem","cross","header","elem","brand","links","Header","state","dispatch"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport  {OverlayMenu}  from \"./OverlayMenu\";\nimport style from './Header.module.css';\nimport { connect } from \"react-redux\";\nimport { logSelector } from \"../store/logStorage/logSelector\";\nimport { updateLog } from \"../store/logStorage/logActions\";\nimport { overSelector } from \"../store/overlay/overSelectors\";\nimport { updateOver } from \"../store/overlay/overActions\";\n\n\n\nexport const HeaderComponent = ({ log, over, changeLog, changeOver }) => {\n\n    const [navColor, SetNavColor] = useState(false); \n\n    const changeNavColor = () => {\n        if (window.scrollY > 120)\n            SetNavColor(true);\n        else\n            SetNavColor(false);\n    }\n\n    window.addEventListener('scroll', changeNavbarColor);\n    let navItem = (log) => {\n        if (log) {\n            return (\n            <>\n                <a href=\"#\">Votre panier</a>\n                <a href=\"#\" onClick={() => changeLog()}>Se dÃ©connecter</a>\n            </>);\n        }\n        else {\n            return (\n                <>\n                    <a href=\"#\" onClick={() => changeLog()}>Se connecter</a>\n                </>);\n        }\n    }\n\n    if (over)\n        return (\n        <>\n        <OverlayMenu />\n        <div className={style.cross}>\n                <img onClick={() => changeOver()} src=\"https://img.icons8.com/ios-glyphs/30/000000/delete-sign.png\"/>\n        </div>\n        </>);\n    else {\n        return(\n            <>\n                <header className={navColor ? style['header-scrolled'] : style.header}>\n                    <div className={style.elem}>\n                        <div className={style.brand}>\n                            Bouterestaurant\n                        </div>\n                        <div className={style.links}>\n                            <a href=\"#\">Menu</a>\n                            {navItem(log)}\n                        </div>\n                        <div className={style.cross}>\n                            <img onClick={() => changeOver()} src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"/>\n                        </div>\n                    </div>\n                </header>\n            </>\n        );\n    }\n    \n\n\n}\n\nexport const Header = connect((state) => ({\n        log: logSelector(state),\n        over: overSelector(state)\n    }),\n    (dispatch) => ({\n        changeLog: () => dispatch(updateLog()),\n        changeOver: () => dispatch(updateOver())\n    })\n)(HeaderComponent)\n\n"]},"metadata":{},"sourceType":"module"}